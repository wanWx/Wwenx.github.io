<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vue基础知识-事件监听]]></title>
    <url>%2F2017%2F06%2F01%2F20170601%2F</url>
    <content type="text"><![CDATA[事件监听你可以使用v-on指令来绑定并监听 DOM 事件。绑定的内容可以是一个当前实例上的方法 (后面无需跟括号) 或一个内联表达式。如果提供的是一个方法，则原生的 DOM event 会被作为第一个参数传入，同时这个 event 会带有 targetVM属性，指向触发该事件的相应的 ViewModel：1234&lt;div id=&quot;demo&quot;&gt; &lt;a v-on=&quot;click: onClick&quot;&gt;触发一个方法函数&lt;/a&gt; &lt;a v-on=&quot;click: n++&quot;&gt;触发一个表达式&lt;/a&gt;&lt;/div&gt; 123456789101112new Vue(&#123; el: &apos;#demo&apos;, data: &#123; n: 0 &#125;, methods: &#123; onClick: function (e) &#123; console.log(e.target.tagName) // &quot;A&quot; console.log(e.targetVM === this) // true &#125; &#125;&#125;) 执行表达式当在v-repeat 里使用v-on时，targetVM显得很有用，因为 v-repeat会创建大量子 ViewModel。但是，通过执行表达式的方式，把代表当前 ViewModel 数据对象的别名传进去，会更方便直观一些：12345&lt;ul id=&quot;list&quot;&gt; &lt;li v-repeat=&quot;item in items&quot; v-on=&quot;click: toggle(item)&quot;&gt; &#123;&#123;item.text&#125;&#125; &lt;/li&gt;&lt;/ul&gt; 1234567891011121314new Vue(&#123; el: &apos;#list&apos;, data: &#123; items: [ &#123; text: &apos;one&apos;, done: true &#125;, &#123; text: &apos;two&apos;, done: false &#125; ] &#125;, methods: &#123; toggle: function (item) &#123; item.done = !item.done &#125; &#125;&#125;) 为什么要在 HTML 中写监听器？你可能会注意到整个事件监听的方式违背了 “separation of concern” 的传统理念。不必担心，因为所有的 Vue.js 时间处理方法和表达式都严格绑定在当前视图的 ViewModel 上，它不会导致任何维护困难。实际上，使用 v-on 还有更多好处： 它便于在 HTML 模板中轻松定位 JS 代码里的对应方法实现。 因为你无须在 JS 里手动绑定事件，你的 ViewModel 代码可以是非常纯粹的逻辑，和 DOM 完全解耦。这会更易于测试。 当一个 ViewModel 被销毁时，所有的事件监听都会被自动移除。你无须担心如何自行清理它们。]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[因为她不喜欢你啊]]></title>
    <url>%2F2017%2F05%2F14%2Ffirstblogg%2F</url>
    <content type="text"><![CDATA[她不理你是对的，是为了你好，这个人不喜欢你，回应你只会害你陷得更深，事实上她还是不喜欢你，你会更伤心的。 心这个东西并不是你想要就能得到的，也不是你喜欢就该是你的，你伤心怎么怎么样…这些都是你的事情，和那个人没关系.]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F05%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[之前一直想搭建属于自己的一个博客，但因为各种原因都不了了之(总要是懒),恰好最近比较闲，于是偷偷自己按网上资料，搭建了属于自己的博客。 至于为什么要自己搭建自己的博客… hhhh,大概是为了装逼，同时自己搭建博客的话，样式的选择也比较自由，可以自己选择，不需要受限于各大平台。 好了，话就这么多…]]></content>
      <categories>
        <category>公告</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>vue</tag>
        <tag>CSS</tag>
        <tag>Javascript</tag>
        <tag>Html</tag>
      </tags>
  </entry>
</search>