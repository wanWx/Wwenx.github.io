{"meta":{"title":"IIssWan's Notes","subtitle":"Quick notes","description":"这是一个假的程序猿","author":"wanWx","url":"http://wanWx.github.io"},"pages":[{"title":"","date":"2017-05-10T13:32:40.947Z","updated":"2017-05-10T03:23:15.146Z","comments":true,"path":"404.html","permalink":"http://wanWx.github.io/404.html","excerpt":"","text":""},{"title":"分类","date":"2017-05-10T02:41:11.000Z","updated":"2017-05-10T02:42:19.039Z","comments":true,"path":"categories/index.html","permalink":"http://wanWx.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-05-10T05:42:54.000Z","updated":"2017-05-10T05:51:27.024Z","comments":true,"path":"tags/index.html","permalink":"http://wanWx.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vue基础知识-事件监听","slug":"20170601","date":"2017-06-01T14:45:34.000Z","updated":"2017-06-01T15:14:05.991Z","comments":true,"path":"2017/06/01/20170601/","link":"","permalink":"http://wanWx.github.io/2017/06/01/20170601/","excerpt":"事件监听你可以使用v-on指令来绑定并监听 DOM 事件。绑定的内容可以是一个当前实例上的方法 (后面无需跟括号) 或一个内联表达式。如果提供的是一个方法，则原生的 DOM event 会被作为第一个参数传入，同时这个 event 会带有 targetVM属性，指向触发该事件的相应的 ViewModel：","text":"事件监听你可以使用v-on指令来绑定并监听 DOM 事件。绑定的内容可以是一个当前实例上的方法 (后面无需跟括号) 或一个内联表达式。如果提供的是一个方法，则原生的 DOM event 会被作为第一个参数传入，同时这个 event 会带有 targetVM属性，指向触发该事件的相应的 ViewModel：1234&lt;div id=&quot;demo&quot;&gt; &lt;a v-on=&quot;click: onClick&quot;&gt;触发一个方法函数&lt;/a&gt; &lt;a v-on=&quot;click: n++&quot;&gt;触发一个表达式&lt;/a&gt;&lt;/div&gt; 123456789101112new Vue(&#123; el: &apos;#demo&apos;, data: &#123; n: 0 &#125;, methods: &#123; onClick: function (e) &#123; console.log(e.target.tagName) // &quot;A&quot; console.log(e.targetVM === this) // true &#125; &#125;&#125;) 执行表达式当在v-repeat 里使用v-on时，targetVM显得很有用，因为 v-repeat会创建大量子 ViewModel。但是，通过执行表达式的方式，把代表当前 ViewModel 数据对象的别名传进去，会更方便直观一些：12345&lt;ul id=&quot;list&quot;&gt; &lt;li v-repeat=&quot;item in items&quot; v-on=&quot;click: toggle(item)&quot;&gt; &#123;&#123;item.text&#125;&#125; &lt;/li&gt;&lt;/ul&gt; 1234567891011121314new Vue(&#123; el: &apos;#list&apos;, data: &#123; items: [ &#123; text: &apos;one&apos;, done: true &#125;, &#123; text: &apos;two&apos;, done: false &#125; ] &#125;, methods: &#123; toggle: function (item) &#123; item.done = !item.done &#125; &#125;&#125;) 为什么要在 HTML 中写监听器？你可能会注意到整个事件监听的方式违背了 “separation of concern” 的传统理念。不必担心，因为所有的 Vue.js 时间处理方法和表达式都严格绑定在当前视图的 ViewModel 上，它不会导致任何维护困难。实际上，使用 v-on 还有更多好处： 它便于在 HTML 模板中轻松定位 JS 代码里的对应方法实现。 因为你无须在 JS 里手动绑定事件，你的 ViewModel 代码可以是非常纯粹的逻辑，和 DOM 完全解耦。这会更易于测试。 当一个 ViewModel 被销毁时，所有的事件监听都会被自动移除。你无须担心如何自行清理它们。","categories":[{"name":"vue","slug":"vue","permalink":"http://wanWx.github.io/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://wanWx.github.io/tags/vue/"}]},{"title":"因为她不喜欢你啊","slug":"firstblogg","date":"2017-05-14T02:55:31.000Z","updated":"2017-05-14T04:52:17.089Z","comments":true,"path":"2017/05/14/firstblogg/","link":"","permalink":"http://wanWx.github.io/2017/05/14/firstblogg/","excerpt":"她不理你是对的，是为了你好，这个人不喜欢你，回应你只会害你陷得更深，事实上她还是不喜欢你，你会更伤心的。","text":"她不理你是对的，是为了你好，这个人不喜欢你，回应你只会害你陷得更深，事实上她还是不喜欢你，你会更伤心的。 心这个东西并不是你想要就能得到的，也不是你喜欢就该是你的，你伤心怎么怎么样…这些都是你的事情，和那个人没关系.","categories":[{"name":"随笔","slug":"随笔","permalink":"http://wanWx.github.io/categories/随笔/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://wanWx.github.io/tags/随笔/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-05-10T13:32:41.052Z","updated":"2017-05-16T15:12:59.673Z","comments":true,"path":"2017/05/10/hello-world/","link":"","permalink":"http://wanWx.github.io/2017/05/10/hello-world/","excerpt":"之前一直想搭建属于自己的一个博客，但因为各种原因都不了了之(总要是懒),恰好最近比较闲，于是偷偷自己按网上资料，搭建了属于自己的博客。 至于为什么要自己搭建自己的博客…","text":"之前一直想搭建属于自己的一个博客，但因为各种原因都不了了之(总要是懒),恰好最近比较闲，于是偷偷自己按网上资料，搭建了属于自己的博客。 至于为什么要自己搭建自己的博客… hhhh,大概是为了装逼，同时自己搭建博客的话，样式的选择也比较自由，可以自己选择，不需要受限于各大平台。 好了，话就这么多…","categories":[{"name":"公告","slug":"公告","permalink":"http://wanWx.github.io/categories/公告/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://wanWx.github.io/tags/随笔/"},{"name":"vue","slug":"vue","permalink":"http://wanWx.github.io/tags/vue/"},{"name":"CSS","slug":"CSS","permalink":"http://wanWx.github.io/tags/CSS/"},{"name":"Javascript","slug":"Javascript","permalink":"http://wanWx.github.io/tags/Javascript/"},{"name":"Html","slug":"Html","permalink":"http://wanWx.github.io/tags/Html/"}]}]}